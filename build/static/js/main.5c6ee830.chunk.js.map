{"version":3,"sources":["logo_imbeeo.png","App.js","reportWebVitals.js","index.js"],"names":["welcomeForm","props","this","showingForm","initialValues","email","phone","name","onSubmit","values","a","Promise","resolve","setTimeout","alert","JSON","stringify","toggleInputDisabled","onSubmitChange","console","log","validationSchema","Yup","shape","min","max","required","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","className","for","htmlFor","style","display","marginLeft","marginRight","id","placeholder","type","value","onChange","onBlur","onClick","disabled","Component","app","state","handleOnSubmitForm","bind","setState","message","addResponseMessage","renderCustomComponent","prevState","dropMessages","src","logo","alt","href","target","rel","subtitle","handleNewUserMessage","senderPlaceHolder","defaultUserMessage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c6ee830.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_imbeeo.0321d66e.png\";","import React, {Component} from 'react'\nimport logo from './logo_imbeeo.png';\nimport { Widget, renderCustomComponent, addResponseMessage, toggleInputDisabled, dropMessages} from 'react-chat-widget';\nimport { Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport \"yup-phone\";\nimport FadeIn from 'react-fade-in';\nimport './App.css';\nimport './styles.css';\nimport './welcomeForm.css';\n\nclass welcomeForm extends Component{\n\t\t\n\t  constructor(props) {\n\t\t  \n\t\tsuper(props);\n\t\t//this.state={showingForm: props.showingForm};\n\t\t\n\t  }\n\t  \n\t  /*\n\t  componentWillReceiveProps(nextProps){\n\t\t  \n\t\t  this.setState({ showingForm: nextProps.showingForm });\n\t\t  \n\t  }\n\t  */\n\t  \n\t  render() {\n\t\tconst phoneRegExp = \"/^1[0-9]{10}$|^[569][0-9]{7}$/\"\n\t\t//const {showingForm} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t{this.props.showingForm? <Formik\n\t\t\t  \n\t\t\t  initialValues={{ email: \"\", phone: \"\", name: \"\"}}\n\t\t\t  onSubmit={async values => {\n\t\t\t\tconst that = this;\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 500));\n\t\t\t\talert(JSON.stringify(values, null, 2));\n\t\t\t\ttoggleInputDisabled();\n\t\t\t\tthis.props.onSubmitChange();\n\t\t\t\tconsole.log(`current state: `,this.props.showingForm);\n\t\t\t\t//this.setState({ showingForm: false});\n\t\t\t  }}\n\t\t\t  validationSchema={Yup.object().shape({\n\t\t\t\tname: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required(\"Invalid user name\"),\n\t\t\t\temail: Yup.string().email().required(\"Invalid email address\"),\n\t\t\t\tphone: Yup.string().phone('HK').required(\"Invalid phone number\")\n\t\t\t  })}\n\t\t\t>\n\t\t\t  {props => {\n\t\t\t\tconst {\n\t\t\t\t  values,\n\t\t\t\t  touched,\n\t\t\t\t  errors,\n\t\t\t\t  dirty,\n\t\t\t\t  isSubmitting,\n\t\t\t\t  handleChange,\n\t\t\t\t  handleBlur,\n\t\t\t\t  handleSubmit,\n\t\t\t\t  handleReset\n\t\t\t\t} = props;\n\t\t\t\treturn (\n\t\t\t\t\n\t\t\t\t  \n\t\t\t\t  <form onSubmit={handleSubmit}>\n\t\t\t\t\t<FadeIn>\n\t\t\t\t\t\n\t\t\t\t\t<label className=\"email\" for=\"rg-from\" htmlFor=\"name\" style={{ display: \"flex\", marginLeft: \"10px\"}}>\n\t\t\t\t\t\n\t\t\t\t\t  Name: \n\t\t\t\t\t  \n\t\t\t\t\t  <input style={{ marginLeft: \"14px\", marginRight: \"80px\", display: \"flex\"}}\n\t\t\t\t\t  id=\"name\"\n\t\t\t\t\t  placeholder=\"\"\n\t\t\t\t\t  type=\"text\"\n\t\t\t\t\t  value={values.name}\n\t\t\t\t\t  onChange={handleChange}\n\t\t\t\t\t  onBlur={handleBlur}\n\t\t\t\t\t  className={\n\t\t\t\t\t\terrors.name && touched.name\n\t\t\t\t\t\t  ? \"text-input error\"\n\t\t\t\t\t\t  : \"text-input\"\n\t\t\t\t\t  }\n\t\t\t\t\t  />\n\t\t\t\t\t  \n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t\t\t{errors.name && touched.name && (\n\t\t\t\t\t  <div className=\"input-feedback\">{errors.name}</div>\n\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t\t<label className=\"email\" for=\"rg-from\" htmlFor=\"email\" style={{ display: \"flex\", marginLeft: \"10px\"}}>\n\t\t\t\t\t\n\t\t\t\t\t  Email: \n\t\t\t\t\t  \n\t\t\t\t\t  <input style={{ marginLeft: \"18px\", marginRight: \"80px\", display: \"flex\"}}\n\t\t\t\t\t  id=\"email\"\n\t\t\t\t\t  placeholder=\"\"\n\t\t\t\t\t  type=\"text\"\n\t\t\t\t\t  value={values.email}\n\t\t\t\t\t  onChange={handleChange}\n\t\t\t\t\t  onBlur={handleBlur}\n\t\t\t\t\t  className={\n\t\t\t\t\t\terrors.email && touched.email\n\t\t\t\t\t\t  ? \"text-input error\"\n\t\t\t\t\t\t  : \"text-input\"\n\t\t\t\t\t  }\n\t\t\t\t\t  />\n\t\t\t\t\t  \n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t\t\t{errors.email && touched.email && (\n\t\t\t\t\t  <div className=\"input-feedback\">{errors.email}</div>\n\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t\t<label className=\"email\" for=\"rg-from\" htmlFor=\"phone\" style={{ display: \"flex\", marginLeft: \"10px\"}}>\n\t\t\t\t\t\n\t\t\t\t\t  Phone: \n\t\t\t\t\t  \n\t\t\t\t\t  <input style={{ marginLeft: \"10px\", marginRight: \"80px\", display: \"flex\"}}\n\t\t\t\t\t  id=\"phone\"\n\t\t\t\t\t  placeholder=\"\"\n\t\t\t\t\t  type=\"text\"\n\t\t\t\t\t  value={values.phone}\n\t\t\t\t\t  onChange={handleChange}\n\t\t\t\t\t  onBlur={handleBlur}\n\t\t\t\t\t  className={\n\t\t\t\t\t\terrors.email && touched.email\n\t\t\t\t\t\t  ? \"text-input error\"\n\t\t\t\t\t\t  : \"text-input\"\n\t\t\t\t\t  }\n\t\t\t\t\t  />\n\t\t\t\t\t\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t\t\t{errors.phone && touched.phone && (\n\t\t\t\t\t  <div className=\"input-feedback\">{errors.phone}</div>\n\t\t\t\t\t)}\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\t  type=\"button\"\n\t\t\t\t\t  className=\"outline\"\n\t\t\t\t\t  onClick={handleReset}\n\t\t\t\t\t  disabled={!dirty || isSubmitting}\n\t\t\t\t\t>\n\t\t\t\t\t  Reset\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"submit\" className=\"outline\" disabled={isSubmitting}>\n\t\t\t\t\t  Submit\n\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t</FadeIn>\n\t\t\t\t  </form>\n\t\t\t\t  \n\t\t\t\t);\n\t\t\t  }}\n\t\t</Formik> : null}\n\t\t</div>\n\t\t);\n\t  }\n}\n\nclass app extends Component{\n\t\n\tconstructor(props) {\n        super(props);\n\t\tthis.state = {showingForm: true};\n\t\tthis.handleOnSubmitForm = this.handleOnSubmitForm.bind(this);\n    }\n\t\n\thandleOnSubmitForm(){\n\t\t\n\t\tthis.setState({ showingForm: false});\n\t\tconsole.log(`state is setted: `,this.state.showingForm);\n\t\t\n\t}\n\t\n\thandleNewUserMessage(message){\n\t\t\n\t\tconsole.log(`New message incoming!` , message);\n\t\t//await this.timeout(1000);\n\t\tsetTimeout(function(){addResponseMessage('Welcome! What can we help you?')}.bind(this),500);\n\t\t\n\t}\n\t\n\tcomponentDidMount(){\n\t\t\n\t\t//const {showingForm} = this.state;\n\t\t//let handleOnSubmitForm = this.handleOnSubmitForm;\n\t\ttoggleInputDisabled();\n\t\trenderCustomComponent(welcomeForm, {showingForm:this.state.showingForm, onSubmitChange:this.handleOnSubmitForm.bind(this)});\n\t\t\n\t}\n\t\n\tcomponentDidUpdate(prevState){\n\t\t\n\t\tif(prevState.showingForm !== this.state.showingForm){\n\t\t\t\n\t\t\tconsole.log(`state is setted: `,this.state.showingForm);\n\t\t\tdropMessages();\n\t\t\t//renderCustomComponent(welcomeForm, {showingForm:this.state.showingForm, onSubmitChange:this.handleOnSubmitForm.bind(this)});\n\t\t\n\t\t}\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\n\t\t\t<div className=\"App\">\n\t\t\t  <header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t<b>\n\t\t\t\t  Live Chat Demo\n\t\t\t\t</b>\n\t\t\t\t<a\n\t\t\t\t  className=\"App-link\"\n\t\t\t\t  href=\"https://reactjs.org\"\n\t\t\t\t  target=\"_blank\"\n\t\t\t\t  rel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t  imBee\n\t\t\t\t</a>\n\t\t\t  </header>\n\t\t\t  <Widget  \n\t\t\t  subtitle = \"imBee Team\"\n\t\t\t  handleNewUserMessage={this.handleNewUserMessage}\n\t\t\t  senderPlaceHolder = \"Complete the form to start chating!\"\n\t\t\t  defaultUserMessage={false}\n\t\t\t  />\n\t\t\t  \n\t\t\t \n\t\t\t</div>\n\t\t)\n\t}\n}\n\n/*\nfunction App() {\n\t\n\t\n\tconst handleQuickButtonClicked = (message) => {\n\t\t\n\t\trenderCustomComponent(welcomeForm);\n\t\t\n\t};\n\t\n\tconst handleNewUserMessage = (newMessage) => {\n\t\t\n\t\tconsole.log(`New message incoming!` , newMessage);\n\t\tsetTimeout(addResponseMessage('Welcome! What can we help you?'),1000);\n\t\t//renderCustomComponent(welcomeForm);\n\t\t// Now send the message through the backend API\n  };\n  \n  return (\n\t\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <b>\n\t\t  Live Chat Demo\n        </b>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          imBee\n        </a>\n      </header>\n\t  <Widget  \n\t  subtitle = \"imBee Team\"\n\t  handleNewUserMessage={handleNewUserMessage}\n\t  defaultUserMessage={false}\n\t  />\n\t  \n\t \n    </div>\n  );\n}\n*/\n\nexport default app;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}